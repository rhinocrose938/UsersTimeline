{"version":3,"sources":["components/Nav.js","components/Modal.js","components/Users.js","App.js","index.js"],"names":["Nav","className","to","type","data-toggle","data-target","id","Modal","handleClose","show","children","showHideClassName","onClick","Users","showModal","element","setState","nameOfUser","real_name","hideModal","setCalendar","elem","dateStartString","Date","parse","start_time","replace","dateEndString","end_time","date","state","users","bind","fetch","then","response","json","data","members","this","activeUser","find","map","key","value","tz","activity_periods","indexOf","selectRange","React","Component","App","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dc2d57fb.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nexport default function Nav() {\r\n      /* This is the navbar component created using Bootstrap library, \r\n         where we set the link to different routes in the component. \r\n         On clicking a particular link the user will get directed to the set route. \r\n         To setup the link we import Link from 'react-router-dom' as above */ \r\n         \r\n    return (<nav className=\"navbar navbar-expand-md bg-dark navbar-dark\">\r\n             <Link className=\"navbar-brand\" to=\"/\">Navbar</Link>\r\n               <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" \r\n                 data-target=\"#collapsibleNavbar\">\r\n                   <span className=\"navbar-toggler-icon\"></span>\r\n               </button>\r\n            <div className=\"collapse navbar-collapse\" id=\"collapsibleNavbar\">\r\n               <ul className=\"navbar-nav\">\r\n                 <li className=\"nav-item\">\r\n                   <Link to=\"/\">Users</Link>\r\n                 </li>\r\n               </ul>\r\n            </div>  \r\n            </nav>)\r\n      }\r\n","import React from 'react';\r\nimport '../App.css';\r\n\r\nconst Modal = ({ handleClose, show, children}) => {\r\n    /* This is the Modal component child component of Users which gets displayed when \r\n       Boolean value of show prop is true as the className of showHideClassName css value\r\n       becomes display block from display none. The main body consists of \r\n       children prop which are passed to it in the parent component Users. \r\n       The handleClose prop on the button close when button is clicked \r\n       changes the boolean value of show to false and modal gets closed.\r\n       The props recieved by this component are handleClose, show and children  */ \r\n    const showHideClassName = show ? \"modal display-block\" :  \"modal display-none\";\r\n    return (\r\n      <div className={showHideClassName}>\r\n        <section className=\"modal-main\">\r\n          <div className=\"modal-body mx-auto\">{children}\r\n          <button className=\"btn btn-danger btn-block my-1\" onClick={handleClose}>close</button>\r\n          </div>\r\n         </section>\r\n       </div>\r\n    );\r\n  };\r\n  export default Modal;","import React from 'react'\r\nimport Modal from './Modal';\r\nimport Calendar from 'react-calendar';\r\nimport 'react-calendar/dist/Calendar.css';\r\n\r\nclass Users extends React.Component {\r\n\r\n  constructor(){\r\n    super();\r\n    this.state = { users: {}, show: false, nameOfUser: ''};\r\n    this.showModal = this.showModal.bind(this);\r\n    this.hideModal = this.hideModal.bind(this);\r\n    this.setCalendar = this.setCalendar.bind(this);\r\n  }\r\n\r\n/* This is the Users Component which is exported and gets rendered inside the App component.\r\n  Here in the constructor function we set the initial state. */\r\n\r\n  showModal = (element) => {\r\n    this.setState({ show: true });\r\n    this.setState({ nameOfUser: element.real_name});\r\n  }\r\n\r\n\r\n  hideModal = () => {\r\n    this.setState({ show: false });\r\n\r\n  }\r\n\r\n  setCalendar = (elem) => {\r\n    const dateStartString = Date.parse(elem.start_time.replace('PM', '').replace('AM', ''));\r\n    const dateEndString = Date.parse(elem.end_time.replace('PM', '').replace('AM', ''));\r\n    this.setState(() => ({date: [new Date(dateStartString), new Date(dateEndString)]}));\r\n  }\r\n\r\n   /*In the componentDidMount lifecycle method we fetch the data using the API '/listUsers' and store the data\r\n    as users in the state of the component using setState. */\r\n\r\n    componentDidMount() {\r\n    fetch('/listUsers').then(response => response.json())\r\n      .then(data => this.setState(() => ({ users: data })));\r\n  }\r\n\r\n     /*In the componentDidMount lifecycle method we fetch the data using the API '/listUsers' and store the data\r\n        as users in the state of the component using setState. Now the users object has a property members\r\n        whose value is an array so we map through it and display button for the modal containing\r\n        Name of User, Location of user and id of user. Now once all usernames are displayed as modal buttons we\r\n        want to get which button is clicked with username. So when a modal button is clicked then the user element\r\n        is passed to showModal function where boolean value of show is set to true and the nameOfUser state is set\r\n        to element.real_name. Once we have the nameOfUser we map through user.members and find those objects which\r\n        have real_name equal to the nameOfUser and store the object as activeUser. Now we use the activeUser\r\n        object to display the opened Modal with name of user and we map through activeUser.activity_periods to display\r\n        the start time and end time as buttons. Now when the start time or end time buttons are clicked the element is\r\n        passed to setCalendar method which parses the start time and end time and converts it into a date range and\r\n        stores it in state as date. Now this range of date is passed to Calendar component as value and the props of\r\n        Calendar selectRange is set to true. So in the modal when any start time or end time buttons are clicked\r\n        the time range is displayed in the calendar component. The close button of the modal will set the boolean value\r\n        of show to false and the modal will close */\r\n\r\n  render() {\r\n    const members = this.state.users.members;\r\n    if (members) {\r\n    const activeUser = members.find(elem => elem.real_name === this.state.nameOfUser);\r\n    return (\r\n      <div className=\"container-sm\">\r\n        <h4 className=\"font-weight-light text-center\">List of Users: click respective button to view Time Range</h4>\r\n        {members.map((element) =>\r\n          (<div className=\"container-sm\" key={element.id}>\r\n            <button className=\"btn btn-primary btn-block\" value={element.real_name}\r\n                    onClick={this.showModal.bind(this, element)}>\r\n              Name of the User: {element.real_name} | Location of User: {element.tz} | Id of User: {element.id}</button>\r\n            <hr/>\r\n          </div>))}\r\n        {activeUser ? <Modal show={this.state.show} handleClose={this.hideModal}>\r\n          <h6>User: {activeUser.real_name}(Click on the time range to view in Calendar)\r\n            <hr/>\r\n            {activeUser.activity_periods.map(elem =>\r\n              (<div key={activeUser.activity_periods.indexOf(elem)}>\r\n                <div className=\"btn-group\" onClick={this.setCalendar.bind(this, elem)}>\r\n                  <button className=\"btn btn-primary my-1\">Start Time: {elem.start_time}</button>\r\n                  <button className=\"btn btn-primary my-1\">End Time: {elem.end_time}</button>\r\n                </div>\r\n              </div>))}</h6>\r\n          {this.state.date ? <div className=\"container-sm my-1 bg-light\">\r\n            <Calendar value={this.state.date} selectRange={true}/>\r\n          </div> : null}\r\n        </Modal> : null}\r\n      </div>\r\n    )\r\n  } else {\r\n      return null;\r\n    }\r\n            }\r\n      }\r\n\r\n      export default Users\r\n","import React from 'react';\nimport Nav from  './components/Nav';\nimport Users from './components/Users';\nimport './App.css';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\n/* This is the main component which contains the \n   Nav component and the Users component. Here the route\n   to the component Users is set using BrowserRouter, Switch\n   and Route. This component is exported to index.js and gets\n   rendered there through React-Dom in index.html div component\n   with id of root */\n\nfunction App() {\n  return (\n    <Router>\n    <div className=\"App\">\n     <Nav/>\n     <Switch>\n     <Route path = \"/\" exact  component = {Users}/>\n     </Switch>\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n\n"],"sourceRoot":""}